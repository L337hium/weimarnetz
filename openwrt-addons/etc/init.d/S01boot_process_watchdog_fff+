#!/bin/sh
touch /tmp/DEBUG /tmp/BOOT /tmp/NVRAM		# logging on during boot-time + use uci/nvram wrapper
/etc/kalua_init
. /tmp/loader

#set a start status file for wan port
echo "DOWN" > /tmp/watch_switch_linkstatus.stat

# under yet unknown circumstances the init.d-boot_process
# can't be established, so we wait some minutes and if OLSR
# was'nt started (= no process_id) we:
# - enforce reformatting of jffs2-partition and reboot

_telnetd_start ()		# during startup, login without password (!) in case of emergency
{
	local FUNC="telnetd_start"

	pidof telnetd >/dev/null && {
		_log do $FUNC daemon debug "already running"
		return
	}
	
	telnetd || {
		_log do $FUNC daemon debug "error"
		return 1
	}

	return 0
}

_system insmod crondog

[ ! -e /etc/shells ] && echo "/bin/ash"  >/etc/shells

grep -sq "^root:"   /etc/group  || echo 'root:*:0:'     >>/etc/group
grep -sq "^nobody:" /etc/group  || echo 'nobody:x:500:' >>/etc/group		# user/pass: nobody/nobody, but no ssh ('invalid shell')
grep -sq "^nobody:" /etc/passwd || echo 'nobody:$1$$enWsv2cbxPCrd0WeXUXtX0:500:500:Linux User,,,:/home/nobody:/bin/sh' >>/etc/passwd

[ -n "$FAILSAFE" ] && _log do check_failsafe daemon info "working in FAILSAFE-mode"
[ -n "$READONLY" ] && _log do check_readonly daemon info "working in READONLY-mode"


while true; do {

	while ! pidof olsrd >/dev/null; do {
		[ -e /tmp/PROFILE_SET ] && {
			[ "$( _system load 1min )" -gt 50 ] && {		# router does'nt hang? // fixme! also check >500?
				[ -e /dev/misc/crondog ] && {
					echo >/dev/misc/crondog
					COUNT=$(( $COUNT - 1 ))
				}
			}
		}
		COUNT=$(( $COUNT + 1 ))
		[ $COUNT -gt 60 ] && break	# 10 minutes should be enough, till olsrd gets started.
		sleep 10			# If this script fails, crondog reboots after ~600 seconds
	} done

	if  pidof olsrd >/dev/null ; then

		_log do pidof_olsrd daemon debug "OLSRd is up"

		if   pidof dropbear >/dev/null ; then
			_log do pidof_dropbear daemon debug "dropbear is up"
			killall telnetd
		else
			_log do pidof_dropbear daemon debug "dropbear is NOT up - use telnet from LAN!"
			
			. /tmp/loader	# LANDEV
#			iptables -I INPUT -p tcp --dport 23 -i ! $LANDEV -j DROP		# fixme!
			
			_telnetd_start && _log do telnetd_start daemon debug "success"
		fi
	else
		_log do if_olsrd_not_up daemon debug "OLSRd is NOT up"
		
		if [ -z "$FAILSAFE" ] && [ -z "$READONLY" ]; then
			_nvram set ff_reset
			_nvram set commit "removed ff_reset for jffs2-reformat"		# this enforces reformatting of jffs2-partition -> plain firmware
			_system reboot_safe "olsrd was not started"
		fi
			
		_log do if_failsafe_or_readonly daemon debug "OLSRd is NOT up"
	fi

	# fixme! when wireless-driver could'nt be loaded, then reformat jffs2
	# (pci-bus claims to have wireless onboard, but /proc doesnt know wireless and driver is onboard!)
	# if [ -n "$WIFI_VENDOR" ] && [ -z "$WIFI_DEVS" ] && reformat_jffs2

	if [ -e /www/SOFTWARE_FULLY_INSTALLED ]; then
		sleep 1200

		_log do exit_watchdog daemon debug "ending resetd + rcS"
		killall resetd

		_log do exit_watchdog daemon debug "switching DEBUG-mode off, but can be manually startet with '>DEBUG'"
		rm /tmp/DEBUG
	else
		_log do exit_watchdog daemon debug "leaving DEBUG-mode on, software-install is not ready yet"	
	fi
	
	rm /tmp/BOOT
	exit
		
} done &
