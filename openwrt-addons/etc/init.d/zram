#!/bin/sh /etc/rc.common

START=00

ram_size()
{
	local line

	while read line; do case "$line" in MemTotal:*) set $line; echo "$2"; break ;; esac; done </proc/meminfo
}

zram_size()	# in megabytes
{
	local zram_size="$( uci get system.@system[0].zram_size_mb )"
	local ram_size="$( ram_size )"

	[ -z "$zram_size" ] && {
		# e.g. 6mb for 16mb-routers or 61mb for 128mb-routers
		zram_size=$(( $ram_size / 2048 ))
	}

	echo "$zram_size"
}

zram_applicable()
{
	local zram_dev="$1"

	grep -sq ^"$zram_dev " /proc/swaps && {
		logger -s -t zram_start -p daemon.info "[OK] '$zram_dev' already active"
		return 1
	}

	[ -e "$zram_dev" ] || {
		logger -s -t zram_start -p daemon.info "[ERROR] device '$zram_dev' not found"
		return 1
	}

	which mkswap >/dev/null || {
		logger -s -t zram_start -p daemon.info "[ERROR] 'mkswap' not installed"
		return 1
	}

	which swapon >/dev/null || {
		logger -s -t zram_start -p daemon.info "[ERROR] 'swapon' not installed"
		return 1
	}
}

zram_dev()
{
	local core="$1"

	echo "/dev/zram${core:-0}"
}

list_cpu_idx()
{
	local line i=0

	while read line; do {
		case "$line" in
			[Pp]rocessor*)
				echo $i
				i=$(( $i + 1 ))
			;;
		esac
	} done <"/proc/cpuinfo"
}

start()
{
	local zram_size="$( zram_size )"
	local zram_dev core

	for core in $( list_cpu_idx ); do {
		zram_dev="$( zram_dev "$core" )"
		zram_applicable "$zram_dev" || return 1

		logger -s -t zram_start -p daemon.info "activating '$zram_dev' for swapping ($zram_size MegaBytes)"
		echo $(( $zram_size * 1024 * 1024 )) >"/sys/block/$( basename $zram_dev )/disksize"
		mkswap $zram_dev
		swapon $zram_dev
	} done
}

stop()
{
	local zram_dev proc_entry

	for core in $( list_cpu_idx ); do {
		zram_dev="$( zram_dev "$core" )"
		proc_entry="/sys/block/$( basename "$zram_dev" )/reset"

		logger -s -t zram_stop -p daemon.info "deactivate swap $zram_dev"
		swapoff $zram_dev

		logger -s -t zram_stop -p daemon.info "claiming memory back via $proc_entry"
		echo "1" >"$proc_entry"
	} done
}
