#!/bin/sh
. /tmp/loader

# wget -qO /dev/null "http://127.0.0.1/cgi-bin-rrd1.html?START=end-24h"		# stats,wifi (signal/noise,rate,olsr-traffic)
# scp /tmp/rrd/img/end-24hWLAN_WLA_STATS.png intercity-vpn.de:/var/www/99.png

# idee:
# random node-IP in mesh with 1 hop or 2 hops -> IP = main-interface
# [ ! -e contact_$IP ] || [ "$(cat contact_${IP}_fetched)" -lt $(( $(_system date unixtime) - 86400 )) ] && {
# 	wget -qO - http://$IP/cgi-bin-contact.html | sed -n '/<H1>Kontakt<\/H1>/,$p'| sed '/^<\/TABLE>/q' >/tmp/node_$IP
#
#	[ "$( md5sum /tmp/node_$IP | cut -d' ' -f1 )" = "c9614a47d313e7be6f6cf2a7b88d5d2b" ]; then
#		echo "empty"
#	}
# }			# ~ 800 Bytes if all fields are set

_watch flash_free_space

_watch wifi_mode || sleep 30		# lets settle down to see some neighs

[ -e "/tmp/service_olsrd_nowatching" ] || {
	_olsr check_plausi || {
		_log do olsr_deepwatch daemon info "error during check_plausi, watching again in 65sec"
		sleep 65
		if _olsr check_plausi; then
			_log do olsr_deepwatch daemon info "[OK] no error on 2nd check"
		else
			_olsr daemon restart "plausi_check_failed"
		fi
	}
}

# _watch vpnc
_watch system_time
_watch dns_resolution
_watch pppoe
_watch netserver
# _watch webcam
#_watch sshd_or_telnet
_watch random_node_id


case "$CONFIG_PROFILE" in
	extrawatt*|shankar*|fparkssee*|preskil*|limona*)
		REVERSE_SSHTUNNEL="true"
	;;
	*)
		REVERSE_SSHTUNNEL=
	;;
esac

[ "$( uci get system.@monitoring[0].maintenance )" = "reverse_sshtunnel" ] && {
	REVERSE_SSHTUNNEL="true"
}

#[ -n "$REVERSE_SSHTUNNEL" ] && {
#		[ -e "/tmp/service_ssh_nowatching" ] && {
#			rm "/tmp/service_ssh_nowatching"
#		}
#
#		pidof dbclient >/dev/null || {
#			_net local_inet_offer >/dev/null && {
#				_watch sshd_or_telnet
#
#				HOSTNAME="$( uci get system.@system[0].hostname )"
#				PORT="$( _net text2port "${CONFIG_PROFILE}${HOSTNAME}" )"
#				_log do reverse_sshtunnel daemon debug "[START] on local port $PORT"
#
#				dbclient -y -I 600 -K 300 -f -N \
#					 -R $PORT:localhost:22 \
#					 -p 22 root@intercity-vpn.de \
#					 -i "/etc/dropbear/dropbear_dss_host_key"
#
#				if pidof dbclient >/dev/null; then
#					_log do reverse_sshtunnel daemon info "[READY] pid: '$( pidof dbclient )' on local port $PORT"
#				else
#					_log do reverse_sshtunnel daemon alert "[ERR] could not startup on local port $PORT"
#				fi
#			}
#		}
#	;;
#esac

_firmware upgrade_is_needed && {
	touch /tmp/START_SYSUPGRADE
}

case "$CONFIG_PROFILE" in
	zumnorde*|adagio*|lisztwe*|apphalle*|fparkssee*|marinapark*|satama*|monami*|liszt28*|elephant*)
		case "$CONFIG_PROFILE" in
			*ap)
				[ -n "$( uci get dhcp.@dnsmasq[0].dhcpscript )" ] && {
					uci delete dhcp.@dnsmasq[0].dhcpscript
					/etc/init.d/dnsmasq restart
				}

				[ -z "$( uci get olsrd.@meta[0].hnaslave )" ] && {
					uci set olsrd.@meta[0].hnaslave=1
				}
			;;
			*adhoc)
				[ $( _system ram_size ) -lt 16384 ] && {
					[ -e "/www/SIMPLE_MESHNODE" ] || {
						[ -e "/www/SIMPLE_MESH" ] && rm "/www/SIMPLE_MESH"	# accident
						touch "/www/SIMPLE_MESHNODE"
						rm "/www/GOOD_MODULE_UNLOAD"
						reboot
					}
				}
			;;
		esac
	;;
esac

[ -e "/etc/init.d/firewall" ] && {
	/etc/init.d/firewall disable
}

[ -e "/etc/init.d/ulogd" ] && {
	/etc/init.d/ulogd disable
}

if iptables -t mangle -nL shaper | grep -q ^ACCEPT ; then
	[ -e "/etc/init.d/netfilter" ] && {
		/etc/init.d/netfilter enable
		reboot
	}
else
	[ -s "/etc/rc.d/S45netfilter" ] || {
		/etc/init.d/netfilter enable
		/etc/init.d/netfilter restart
	}
fi

[ -e "/tmp/ENDBOOT" ] || {
	touch "/tmp/ENDBOOT"
	killall rcS     # fixme!

	[ $( _system ram_size ) -lt 16384 ] && {
		[ -e "/www/GOOD_MODULE_UNLOAD" ] && {
			grep -q "ipt_LOG" "/www/GOOD_MODULE_UNLOAD" || {
				rm "/www/GOOD_MODULE_UNLOAD"
			}
		}

		/etc/init.d/S70prepare_fff+ unload_unneeded_kmodules
	}
}

_wget do "http://localhost/cgi-bin/luci" 5 >/tmp/LUCI_HEADER    #cache luci header for splash page, improve by native lua call?
