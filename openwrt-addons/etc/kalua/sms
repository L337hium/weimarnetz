_sms_send ()			# SENS: wrapper for SMS-sending independent from service
{				#	- collect all relevant data
				#	- write and process queue-file line by line
				#	- call service-specific function
				#	- when something fails, use another service
				#	this should be executed by cron every minute (to process queue-file)

	local   FUNC="sms_send"
	local   DEST="$1"					# ARG1: string (name or number)
	local   TEXT="$2"					# ARG2: string (text to send, codepage ISO_8859-1)
	local NOPOST="$3"					# ARG3: string (optional, keyword: nopost)

	local   USER="${4:-$( uci get sms.@sms[0].username )}"	#	string 		// fixme! same username/pass for every provider?
	local   PASS="${5:-$( uci get sms.@sms[0].password )}"	#	string

	local   POST="${6:-$( uci get sms.@sms[0].post )}"	#       string (something like: "from klaus [03643/110]" )
	local NUMBER

	[ -z "$USER" ] && {
		_log do $FUNC user crit "username not given - aborting"
		return 1
	}

	[ -z "$PASS" ] && {
		_log do $FUNC user crit "password not given - aborting"
		return 1
	}

	[ -z "$TEXT" ] && {
		_log do $FUNC user crit "text not given - aborting"
		return 1
	}

	[ -n "$NOPOST" ] && POST=""

	NUMBER="$( _phone book_name2number "$DEST" )" || {			# can return a comma-separated list of numbers
		_log do $FUNC user notice "wrong name/number - aborting"
		return 1
	}

	[ -n "$POST" ] && {
		TEXT="$TEXT $POST @$( date +%H:%M)uhr"		# append own brand + time
	}

	_log do $FUNC user debug "to '$DEST' = $NUMBER, ${#TEXT} chars: '$TEXT'"

	_sms send_sms77 "$USER" "$PASS" "$( _sanitizer do "$NUMBER" urlvalue )" "$( _sanitizer do "$TEXT" urlvalue )" || {

		_log do $FUNC user info "send failed - respawning sms to '$DEST' = $NUMBER, ${#TEXT} chars: '$TEXT'"
		_scheduler add "_sms send \"$NUMBER\" \"$TEXT\" no_post" move2top		# fixme! this does not work, if args are given directly (e.g. pass)
		return 1
	}

	_log do $FUNC user info "[OK] to '$DEST' = $NUMBER, ${#TEXT} chars: '$TEXT'"
}

_sms_send_sms77()
{
	local funcname="sms_send_sms77"
	local user="$1"
	local pass="$2"
	local number="$3"
	local text="$4"		# must be URL encoded
	local type="quality"	# basicplus|standard|quality|festnetz|flash - hardcoded, needs abstraction
	local trash out rc o from
	local url="http://www.sms77.de/gateway/?type=$type"

	case "$type" in
		quality)
			[ ${#text} -gt 160 ] && {
				trash="$( echo "$text" | cut -b 161-999 )"
				text="$(  echo "$text" | cut -b 1-160 )"		# fixme! respect encoding borders, e.g. %20 -> %2 does not work
				_log do $funcname daemon debug "shortened text, trash was: '$trash'"
			}

			from="$( _weblogin metadata_locationname )"

			case "$CONFIG_PROFILE" in
				*)
					from="$( _weblogin metadata_locationname )"
				;;
			esac

			from="$( _sanitizer do "$from" length:11 urlvalue )"

			url="${url}&from=${from}"
		;;
	esac

	_log do $funcname daemon debug "[${#text} chars] ${url}&u=${user}&p=${pass}&to=${number}&text=${text}"

	out="$( _wget do "${url}&u=${user}&p=${pass}&to=${number}&text=${text}" 10 "$user" "$pass" )"
	rc="$?"

	if [ $rc -ne 0 ] || [ "$out" != "100" ]; then
									# not implemented:
		case "$out" in						# 100 = "SMS was send" / OK
		        201) o="wrong country code" ;;			# 101 = "Sending failed at least to one recipient"
		        202) o="wrong recipient number" ;;		# 306 = "Sending ID/Nummer is wrong"
		    300|900) o="username/pass wrong or unset" ;;
			301) o="recipient unset" ;;
			304) o="type unset" ;;
			305) o="text unset" ;;
			307) o="url unset" ;;
			400) o="type invalid" ;;
			401) o="text too long" ;;
			902) o="API deactivated!" ;;
			903) o="serverip wrong" ;;
			500) o="no credits available" ;;
			600) o="carrier transfer failed" ;;
			700) o="undefined error" ;;
			801) o="logfile unset" ;;
			802) o="logfile not exist" ;;
			803) o="ring tone undefined" ;;
			902) o="account deactivated" ;;
			903) o="server IP wrong" ;;

			402|*)	# reload mistake, try again
				_log do $funcname user crit "wget-returncode: '$rc' - sms77-answer: '$out' - something went wrong"
				return 1	# send again
			;;
		esac

		_log do $func user info "wget-returncode: '$rc' - sms77-answer: '$out' ($o)"
	fi
}
