_welcome_htmlout_user_over_limit ()
{
	local FUNC="welcome_htmlout_user_over_limit"
	local MAC="$( _net ip2mac $REMOTE_ADDR )"
	local LIMIT_IN_MB="$( _math bytes2unit "$( _pfilter user_traffic_limit $MAC )" mb )"

	_log do $FUNC daemon info "start"
	
	cat <<EOF
<big><b>
Leider wurdest du ausgeloggt, weil du zuviel Datenverkehr verursacht hast.<br>
Momentan darf dein Rechner $LIMIT_IN_MB Megabytes pro Tag verursachen.<br>
Ein erneuter Login ist ab 6 Uhr Vormittag wieder m&ouml;glich.<br>
EOF
										
	# fixme! hinweis auf netzinterne dienste?

	_pfilter user_list_local_registered | grep -i -q $MAC

	test "$?" -eq 0 && return							# user is already registered

	_log do $FUNC daemon info "unregistered"

	cat <<EOF
Sollte daran etwas falsch sein, spreche mit dem Administrator dieses Netzknotens.	<br>
Dieser kann dich auf diesem Knoten registrieren - dann ist mehr drin ;-)		<br>
Bei Problemen kannst du auch das <a href="http://wireless.subsignal.org/index.php?title=Telefonnummer">Weimarnetz-Sorgentelefon</a> anrufen: 03643 / 544304
</b></big>
EOF
}

_welcome_htmlout_user_blackisted ()
{
	local FUNC="welcome_htmlout_user_blackisted"

	_log do $FUNC daemon info "start"
	
	cat <<EOF
<big><b>
Dieser Netzknoten wurde f&uuml;r die Benutzung durch andere Benutzer gesperrt.<br>
Dies kann verschiedene Ursachen haben. Es besteht nat&uuml;rlich die M&ouml;glichkeit,<br>
das Du dir eine eigene Freifunkantenne ("Router") aufstellst.<br>
Mehr Informationen dazu findest du unter <a href="$WIKI_MAIN_URL">$WIKI_MAIN_URL</a> .<br>
Bei Problemen kannst du auch das <a href="http://wireless.subsignal.org/index.php?title=Telefonnummer">Weimarnetz-Sorgentelefon</a> anrufen: 03643 / 544304
</b></big>
EOF
}

_welcome_htmlout_user_yet_logged_in ()
{
	_log do welcome_htmlout_user_yet_logged_in daemon debug "working"

	echo "<small>(Hinweis: du bist schon eingeloggt)</small>"
}

_welcome_admin_url ()
{
	_wget do "http://$1/cgi-bin-index.html" 3 | sed -n '/<LI>/{n;p;q}' | grep -v "Berliner Webseite"
}

_welcome_htmlout_gateway_intropic ()
{
	local DATE HOSTNAME COST_INT GATEWAY NEXTHOP METRIC
	. /tmp/GATEWAY_CHECK_RECENT     # need: NEXTHOP|GATEWAY is: DATE|HOSTNAME|COST_INT|GATEWAY|NEXTHOP|METRIC

	cat <<EOF
Der Internetzugang wird dir gerade von diesem freundlichen<br>
Netzteilnehmer zur Verf&uuml;gung gestellt: "<b>$( _net ip2dns $GATEWAY )</b>" (Knoten $( _ipsystem do $GATEWAY ))<br>
<a href="http://$GATEWAY/cgi-bin-index.html"><img src="http://$GATEWAY/images/intro.jpg" border=0 width=240 height=180 alt="Hier sollte eigentlich das Startbild deines Internet-Einspeisers zu sehen sein."></a>
EOF

	_welcome admin_url $GATEWAY

	if [ "$GATEWAY" != "$NEXTHOP" ]; then
		cat <<EOF
<br><br>Dies ist dein n&auml;chster Funknachbar: "<b>$( _net ip2dns $NEXTHOP )</b>" (Knoten $( _ipsystem do $NEXTHOP ))<br>
<a href="http://$NEXTHOP/cgi-bin-index.html"><img src="http://$NEXTHOP/images/intro.jpg" border=0 width=240 height=180 alt="Hier sollte eigentlich das Startbild deines naechsten Funknachbars &uuml;ber den das Internet geleitet wird zu sehen sein."></a>
EOF
		_welcome admin_url $NEXTHOP
	else
		echo "<br><br>Das ist auch dein n&auml;chster Funknachbar!<br>"
	fi
}

_welcome_usercase_decide ()
{
	if [ "$REQUEST_METHOD" = "POST" ]; then			# fixme! a simple POST is enough?
		USECASE="BUTTON_PRESSED"
	else
		eval $( _http query_string_sanitize )		# fixme! also check: already logged in?
		USECASE="LOOK_ONLY"
	fi
	
	_log do decide_usecase daemon info "USECASE: '$USECASE' REMOTE_ADDR: '${REMOTE_ADDR}'"
}

_welcome_htmlout_header ()
{
	export DATE="$( grep SVN "/etc/variables_fff+" | cut -d"#" -f2 )"
	export TITLE="Weimarnetz-Infoseite"

	SCRIPT=${0#/rom}
	. ${SCRIPT%/*}/cgi-bin-pre.sh
}

_welcome_htmlout_footer ()
{
	. ${SCRIPT%/*}/cgi-bin-post.sh
}

_welcome_htmlout_submitbutton_start ()
{
	echo '<form action="" method="POST"><input type="submit" value="Internetverbindung aufbauen"></form>'
}

_welcome_htmlout_indexpage ()
{
	sh /www/cgi-bin-index.html
}

_welcome_htmlout_message_maintenance ()
{
	echo "Router befindet sich gerade im Wartungs-Modus oder in der Startphase, bitte keinen Datenverkehr verursachen."
}

_welcome_htmlout_message_wifi ()
{
	echo "Hallo Nutzer. Du musst noch unten auf den Knopf dr&uuml;cken!<br>"
	echo "Versuche Dich in Zukunft per Kabel ans Weimarnetz anzuschliessen, es geht dann schneller.<br>"
	echo "Bei Problemen kannst du auch das <a href="http://wireless.subsignal.org/index.php?title=Telefonnummer">Weimarnetz-Sorgentelefon</a> anrufen: 03643 / 544304"
}

_welcome_htmlout_link_usermanagement ()
{
	cat <<EOF
<table cellspacing=0 cellpadding=0 border=0 width=100%><tr><td align=right width=100%>
<a href="/cgi-bin/config_fff+?gui=user"><small>...diesen Computer fest eintragen</small></a></td></tr></table>
EOF
}

_welcome_htmlout_message_lan ()
{
	echo "Hallo Nutzer. Du musst noch unten auf den Knopf dr&uuml;cken!<br>"
	echo "Bei Problemen kannst du auch das <a href="http://wireless.subsignal.org/index.php?title=Telefonnummer">Weimarnetz-Sorgentelefon</a> anrufen: 03643 / 544304"
}

_welcome_htmlout_message_welcome ()
{
	local BORDER

	if _pfilter user_probe_admin $MAC ; then
		BORDER="unbegrenzt"
	else
		BORDER="$( _math bytes2unit "$( _pfilter user_traffic_limit $MAC )" mb ) Megabytes/Tag"
	fi

	cat <<EOF
Viel Spass beim Surfen.
<i>Tipp</i>: Du erreichst diese Seite immer unter <b>
<tt>http://$( uci get system.@system[0].hostname )</tt></b><br>
<small>Dein Benutzerstatus erlaubt Dir
$BORDER Internetdatenverkehr (siehe <a href="/cgi-bin/config_fff+?gui=user">Benutzerverwaltung</a>).</small><br>
EOF
}

_welcome_remoteaddr_is_from_wifi ()
{
	fgrep -sq "$REMOTE_ADDR;" /tmp/CLIENTS_WIFI
}

_welcome_remoteaddr_is_from_lan ()
{
	fgrep -sq "$REMOTE_ADDR;" /tmp/CLIENTS_LAN
}

_welcome_remoteadd_is_from_wan ()
{
	fgrep -sq "$REMOTE_ADDR;" /tmp/CLIENTS_WAN
}

_welcome_maintenance_check ()
{
	[ ! -e "/www/SOFTWARE_FULLY_INSTALLED" ] && return 0
	return 1
}

_welcome_mode_decide ()
{
	local FUNC="welcome_mode_decide"
	
	  if [ "$USECASE" = "BUTTON_PRESSED" ]; then
	  	MODE=BUTTON

  	elif _welcome maintenance_check ; then
  		MODE=SERVICE
  	
	elif _welcome remoteaddr_is_from_wifi && [ "$REDIRECTED" != "1" ]; then
		MODE=REDIRECT_WIFI
	
	elif _welcome remoteaddr_is_from_wifi ; then
		MODE=WIFI

	elif _welcome remoteaddr_is_from_lan && [ "$REDIRECTED" != "1" ]; then
		MODE=REDIRECT_LAN

	elif _welcome remoteaddr_is_from_lan ; then
		MODE=LAN
	
	elif [ -n "$( _welcome remoteadd_is_from_wan )" ] && [ "$REDIRECTED" != "1" ]; then
		MODE=REDIRECT_WAN
	
	elif [ -n "$( _welcome remoteadd_is_from_wan )" ]; then
		MODE=WAN
	else
		if _net ip4_is_private $REMOTE_ADDR; then
			MODE=MESH
		else
			MODE=WAN
		fi
	fi
	
	_log do $FUNC daemon info "mode: '$MODE'"

	[ -z "$DEBUG" ] && return

	case "$DEBUG" in
		1) MODE=SERVICE       ;;
		2) MODE=BUTTON        ;;
		3) MODE=REDIRECT_WIFI ;;
		4) MODE=WIFI          ;;
		5) MODE=REDIRECT_LAN  ;;
		6) MODE=LAN           ;;
		7) MODE=REDIRECT_WAN  ;;
		8) MODE=WAN           ;;
		*) MODE=MESH          ;;
	esac

	_log do $FUNC daemon info "mode: '$MODE' (enforced debug)"
}

_welcome_wiki_vars ()
{
	WIKI_MAIN_URL="http://wireless.subsignal.org"
	WIKI_ARTICLE_1="title=Vorlage:Startseite.Aktuelles"		# + ".Sundhausen"
	WIKI_ARTICLE_1_HEADLINE="Aktuelle Meldungen"                  
	WIKI_ARTICLE_2="title=Vorlage:Spendenaufruf"
	WIKI_ARTICLE_2_HEADLINE="Spendenaufruf"     
	WIKI_ARTICLE_3="title=Vorlage:Nutzungsbedingungen"
	WIKI_ARTICLE_3_HEADLINE="Nutzungsbedingungen"     
	NEWSSERVER_URL="http://news.weimarnetz.de/newsgroups"
	LATEST_NEWS_URL="http://www.weimarnetz.de/latestnews.html"
	LATEST_NEWS_HEADLINE="Aktuelle Diskussionen"              
}

_welcome_htmlout_news ()
{				# SENS: loads a file containing the 10 latest news from the newsserver, created by A. Braeu
	local URL="$1"		# ARG1: string,URL
	local HEAD="$2"		# ARG2: string,headline

	cat <<EOF
	<h2>$HEAD </h2>
	<div class="row">
	<div class="span6">
EOF

        _wget do "${URL}" 2 | sed -e 's/Ã¤/ä/g' -e 's/Ã¼/ü/g' -e 's/Ã¶/ö/g' -e's/<a[^>]*>//gI'  -e 's/<\/a>//gI'	# fetch this page but abort after max 3 seconds	and convert german umlauts

	test "$?" -ne 0 && echo "Fehler aufgetreten...<br>Hier sollten eigentlich aktuelle Diskussionen vom Newsserver/Mailingliste stehen.<br><br>"
	cat <<EOF
	</div>
	</div>
EOF
}	

_welcome_htmlout_wikipage ()
{
	local FUNC="welcome_htmlout_wikipage"
	local  URL="${WIKI_MAIN_URL}/index.php"
	local PAGE="$1"
	local HEAD="$2"

	cat <<EOF
<h2>$HEAD</h2>
<div class="row">                                                                                                                 
<div class="span6">
EOF
	which awk >/dev/null && {
		_wget do "${URL}?${PAGE}" 2 | awk -v URL=$URL '{		# fetch this page but abort after max 3 seconds
			gsub(/\/index.php/,URL)
			gsub(/Ã¤/,"ä")						# utf8
			gsub(/Ã¼/,"ü")						# utf8
			gsub(/Ã¶/,"ö")						# utf8 - yet missing: the big german umlauts + sz
			gsub(/<\/a>/,"")
			gsub(/<a.*>/,"")
			if(s==1)
				print
			if(substr($0,4,24)=="<div class=\"editsection\"" || index($0,"class=\"mw-headline\"")>0)
				s=1
			if(s==1 && substr($0,1,11)=="</li></ul>")		# Problem: only lists are possible (end-detection...)
				exit
		}END{if(s!=1)exit 1}'
	}
	
	if [ "$?" -ne 0 ] || ! which awk >/dev/null; then		# fixme! awk -> sed
		cat <<EOF						# fetching wikipage was NOT successful
		Fehler aufgetreten....<br>
		Hier sollte eigentlich ein Auszug<br>
		aus dem Weimarnetz-Wiki (<a href="${URL}?${PAGE}">"${PAGE}"</a>) stehen.
		<br><br>
EOF
		_log do $FUNC daemon info "failed to retrieve: '${URL}?${PAGE}'"
	fi
	cat <<EOF
</div>
</div>
EOF
}

_welcome_htmlout_luciheader ()
{
	local FUNC="welcome_htmlout_luciheader"
	local URL="http://localhost/cgi-bin/luci/"
	
	[ -e /tmp/LUCI_HEADER ] || {
		wget -qO - "$URL" >/tmp/LUCI_HEADER
	}
	cat /tmp/LUCI_HEADER | while read LINE; do
	case "$LINE" in
		*"<header>"*)
	               	header_found=1
			echo "<header>"
	                ;;
		*"</header>"*)
	               	header_found=0
	               	echo "</header>"
	                ;;
		*)
	               	[ "$header_found" = "1" ] && echo "$LINE"
	;;
		esac
	done
	
	if [ "$header_found" = "2" ]; then               # fixme! awk -> sed
		cat <<EOF
		<header>Fehler, hier sollte der Header stehen</header>
EOF
		_log do $FUNC daemon info "failed to retrieve: '${URL}'"
	fi
}
